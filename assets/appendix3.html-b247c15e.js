import{_ as t,o as r,c as n,e as o}from"./app-d85a60fe.js";const s={},p=o('<h1 id="附录-3" tabindex="-1"><a class="header-anchor" href="#附录-3" aria-hidden="true">#</a> 附录 3</h1><h2 id="术语表" tabindex="-1"><a class="header-anchor" href="#术语表" aria-hidden="true">#</a> 术语表</h2><h3 id="首字母缩略词" tabindex="-1"><a class="header-anchor" href="#首字母缩略词" aria-hidden="true">#</a> 首字母缩略词</h3><table><thead><tr><th>缩略词</th><th>解释</th></tr></thead><tbody><tr><td>ATDD</td><td>验收测试驱动开发</td></tr><tr><td>BDD</td><td>行为驱动开发</td></tr><tr><td>BRD</td><td>业务需求文档</td></tr><tr><td>DA</td><td>规范敏捷</td></tr><tr><td>DoD</td><td>完成的定义</td></tr><tr><td>DoR</td><td>准备就绪的定义</td></tr><tr><td>DSDM</td><td>动态系统开发方法</td></tr><tr><td>EVO</td><td>渐进价值交付</td></tr><tr><td>LeSS</td><td>大规模敏捷开发</td></tr><tr><td>LSD</td><td>精益软件开发</td></tr><tr><td>PDCA</td><td>计划 - 实施 - 检查 - 行动</td></tr><tr><td>PMO</td><td>项目管理办公室</td></tr><tr><td>ROI</td><td>投资回报率</td></tr><tr><td>RUP</td><td>统一软件开发过程</td></tr><tr><td>SAFe</td><td>大规模敏捷框架</td></tr><tr><td>SBE</td><td>实例化需求</td></tr><tr><td>XP</td><td>极限编程</td></tr></tbody></table><h3 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h3><p><strong>A3. A3</strong> 一种思维方式及一种解决问题的系统化过程，将相关信息囊括在一张 A3 大小的纸上。</p><p><strong>Acceptance Test-Driven Development(ATDD). 验收测试驱动开发</strong> 一种协作制定验收测试标准的方法用于创建交付前的验收测试。</p><p><strong>Agile. 敏捷</strong> 用于描述反映了《敏捷宣言》所述价值观和原则的思维模式的一个术语。</p><p><strong>Agile Coach. 敏捷教练</strong> 指掌握了敏捷值似乎和经验的人员，在其组织和团队转型中能够发挥培训、辅导和指导的作用。</p><p><strong>Agile Life Cycle. 敏捷生命周期</strong> 一种迭代兼增量方法用于优化工作项目增加交付频率。</p><p><strong>Agile Manifesto. 敏捷宣言</strong> 敏捷价值观和原则的最初官方定义。</p><p><strong>Agile Mindset. 敏捷思维模式</strong> 一种思维和行为方式，植根于《敏捷宣言》的四大价值观和十二条原则。</p><p><strong>Agile Practitioner. 敏捷实践者</strong> 接受敏捷思维模式，在跨职能团队中与志同道合的同事开展协作的人。也成为敏捷专家。</p><p><strong>Agile Principles. 敏捷原则</strong> 《敏捷宣言》中所体现的敏捷项目交付的十二条原则。</p><p><strong>Agile Unified Process. 敏捷统一过程</strong> 在业务应用软件开发中应用敏捷技术和思想的一种简单且便于理解的方法。它是统一软件开发过程（RUP）的简化版本。</p><p><strong>Agilist. 敏捷专家</strong></p><p><strong>Anti-Pattern. 反模式</strong> 一种已知的、有缺陷的、不可取的工作模式。</p><p><strong>Automated Code Quality Analysis. 自动化代码质量分析</strong> 用于检测代码库缺陷和漏洞的脚本化测试。</p><p><strong>Backlog. 待办事项列表</strong></p><p><strong>Backlog Refinement. 待办事项列表的细化</strong> 对项目需求和/或正在进行的活动的渐进明细其中团队协作参与需求的审核、更新和撰写以满足客户需求。</p><p><strong>Behavior-Driven Development(BDD). 行为驱动开发</strong> 一种系统设计和确认实践采用测试优先的原则和类似英语的脚本。</p><p><strong>Blended Agile. 混合敏捷</strong> 指同时使用两种或两种以上的敏捷框架、方法、要素或实践，例如 Scrum 与极限编程和看板的结合使用</p><p><strong>Blocker. 阻碍</strong></p><p><strong>Broken Comb. “破梳齿”人才</strong> 指对团队所需的多种技能掌握程度深浅不一的人。也称为”颜料滴洒“人才。</p><p><strong>Burndown Chart. 燃尽图</strong> 剩余工作与时间盒内剩余实践关系的一种图形化表示形式。</p><p><strong>Burnup Chart. 燃起图</strong> 对已完成工作与产品发布关系的一种图形化表示形式。</p><p><strong>Business Requirement Documents(BRD). 业务需求文档</strong> 某特定项目的所有需求列表。</p><p><strong>Cadence. 节奏</strong> 项目执行节奏。</p><p><strong>Collective Code Ownership. 代码集体所有</strong> 一种项目加速和协作技术，任何团队成员都有权修改任何项目工作产品或可交付成果。它强调整个团队的责任和最终责任。</p><p><strong>Continuous Delivery. 持续交付</strong> 立即向客户交付功能增量的实践往往通过采用小批量工作和自动化技术实现。</p><p><strong>Continuous Integration. 持续整合</strong> 一种团队各成员的工作产品经常整合并彼此确认的实践。</p><p><strong>Cross-Functional Team. 跨职能团队</strong> 指由实践者组成的团队，这些实践者掌握交付有价值产品增量所需的各种技能。</p><p><strong>Crystal Family of Methodologies. 水晶家族方法论</strong> 轻量级敏捷软件开发方法的集合，重点关注特定情况的适应性。</p><p><strong>Daily Scrum. 每日例会</strong> 指每天召集的一种简短的协作会议，团队将回顾前一天的进展，宣布当天的计划，强调曾遇到或预期出现的障碍。也称为每日站会。</p><p><strong>Definition of Done(DoD). 完成的定义</strong> 团队需要满足的所有标准的核对单，只有可交付成果满足该核对单才能是为准备就绪可供客户使用。</p><p><strong>Definition of Ready(DoR). 准备就绪的定义</strong> 团队以用户需求为中心的核对单，包括团队开始工作所需的全部信息。</p><p><strong>DevOps. DevOps</strong> 通过改善开发和运营员工之间的协作来理顺交付流程的各种实践的集合。</p><p><strong>Disciplined Agile (DA). 规范敏捷</strong> 指一种过程决策框架，能够围绕增量和迭代解决方案的交付来简化过程决策。</p><p><strong>Double-Loop Learning. 双循环学习</strong> 一种质疑潜在的价值和假设的过程，目的不是仅关注征兆，而是为了更好地阐述根本原因，制定改善对策。</p><p><strong>Dynamic Systems Development Method (DSDM). 动态系统开发方法</strong> 一种敏捷项目交付框架。</p><p><strong>Evolutionary Value Delivery (Evo). 渐进价值交付</strong> 公认的首要敏捷方法，拥有其他方法所不具备的特点，重点关注向相关方交付多种可衡量的价值需求。</p><p><strong>eXtreme Programming. 极限编程</strong> 一种敏捷软件开发方法，不仅能提高软件质量、改善软件对不断变化的客户需求的响应能力，还能缩短软件版本发布周期，增加发布频率。</p><p><strong>Feature-Driven Development. 功能驱动开发</strong> 从客户重视的功能角度触发的轻量级敏捷软件开发方法。</p><p><strong>Fit for Purpose. 符合目的</strong> 符合预期目的的产品。</p><p><strong>Fit for Use. 适合使用</strong> 以当前形势使用能实现其预期目的的产品。</p><p><strong>Flow Master. 工作流主管</strong> 在连续工作流或看板环境下工作的团队教练和服务请求管理者。相当于 Scrum 主管。</p><p><strong>Framework. 框架</strong> 比某种特定方法更为通用的方法。</p><p><strong>Functional Requirement. 功能需求</strong> 指某产品或服务应完成的一个特定行为。</p><p><strong>Functional Specification. 功能规范</strong> 指某系统或应用需要实现的一种特定功能。它通常体现在功能规范文档中。</p><p><strong>Hoshin Kanri.方针管理</strong> 一种策略或政策的部署方法。</p><p><strong>Hybrid Approach. 混合方法</strong> 指两种或两种以商敏捷或非敏捷要素的组合，据有非敏捷的最终结果。</p><p><strong>IDEAL. IDEAL</strong> 一种组织改进模型，以所描述的五个阶段命名启动、诊断、确立、执行和学习。</p><p><strong>Impact Mapping. 影响地图</strong> 战略规划技术，被组织作为打造新产品的路线图。</p><p><strong>Impediment. 障碍</strong> 指妨碍团队达成其目标的干扰因素。也成为阻碍。</p><p><strong>Increment. 增量</strong> 经过测试、验收的使用可交付成果也是项目总体成果的组成部分。</p><p><strong>Incremental Life Cycle. 增量型生命周期</strong> 提供已完工的、客户可立即使用的可交付成果的方法。</p><p><strong>Information Radiator. 信息发射源</strong> 可见 的实物展示，向组织内其他成员提供信息，在不干扰团队的情况下即时实现知识共享。</p><p><strong>I-shaped. I 型人才</strong> 指深入掌握单一专业技能的人员，他们不具备团队所需的其他技能或对其不感兴趣。</p><p><strong>Iteration. 迭代</strong> 产品或可交付成果开发的一个时间盒，循环其中需要执行交付价值所需的所有工作。</p><p><strong>Iterative Life Cycle. 迭代型生命周期</strong> 允许对未完成工作提供反馈从而对工作加以改善和修改的的方法。</p><p><strong>Kaizen Events. 改善活动</strong> 旨在对系统加以改善的活动。</p><p><strong>Kanban Board. 看板面板</strong> 可视话工具，能够通过瓶颈和工作量的有形呈现改善工作流。</p><p><strong>Kanban Method. 看板方法</strong> 受到看板库存控制系统启发的敏捷方法，专门用于知识工作。</p><p><strong>Large-Scale Scrum (LeSS). 大规模敏捷开发</strong> 一种产品开发框架，它根据扩展指导方针库达敏捷开发规模，同时保留原有的敏捷开发目的。</p><p><strong>Lean Software Development (LSD). 精益软件开发</strong> 软件开发领域的精益制造原理和实践，它基于一套旨在满足质量、速度和客户定位要求的原理和实践。</p><p><strong>Life Cycle. 生命周期</strong> 指产品从构想、创造到投入使用的过程。</p><p><strong>Mobbing. 群体开发</strong> 一种工作技术，其中多名团队成员围绕某个具体工作项目同时协调工作。</p><p><strong>Organizational Bias. 组织偏好</strong> 组织对一组衡量指标的选择。这组衡量指标具有如下核心，价值探索与执行、速度与稳定性、数量与质量、灵活性与可预测性。</p><p><strong>Organizational Change Management. 组织变革管理</strong> 全面的、周期性的、结构化方法，旨在使个人、群组和组织在从当前状态转换未未来状态时实现预期的业务受益。</p><p><strong>Paint-Drip. ”颜料滴洒“人才</strong></p><p><strong>Pairing. 结对</strong> 结对工作。</p><p><strong>Pair Programming. 结对编程</strong></p><p><strong>Pair Work. 结对工作</strong> 由两名团队成员结对、同时从事同一工作项目的技术。</p><p><strong>Personas. 人物角色</strong> 代表一组类似终端用户的典型用户，通过其目标、动机和据有代表性的个人特征描述。</p><p><strong>Pivot. 转向</strong> 指计划中的方向修正旨在检测产品或册罗的新假设。</p><p><strong>Plan-Do-Check-Act(PDCA). 计划-执行-检查-行动</strong> 组织中的一种迭代管理方法旨在促进过程和产品的控制和持续改善。</p><p><strong>Plan-Driven Approach. 计划驱动方法</strong> 参考预测法。</p><p><strong>Predictive Approach. 预测法</strong> 一种工作管理方法在整个项目生命周期中应用工作计划和管理工作计划。</p><p><strong>Predictive Life Cycle. 预测型生命周期</strong> 一种更为传统的方法，大部分规划在前期进行随后一次性执行它是一个连续的过程。</p><p><strong>Project Management Office (PMO). 项目管理办公室</strong> 与项目相关的治理过程进行标准化并促进资源、方法论、工具和技术共享的一种管理架构。</p><p><strong>Product Backlog. 产品待办事项列表</strong> 指团队围绕某产品维护的一个以用户未中心的需求的有序列表。</p><p><strong>Product Owner. 产品负责人</strong> 负责使产品实现最大价值的人员，其对所创建的终端产品负责并承担最终责任。另参见服务请求管理者。</p><p><strong>Progressive Elaboration. 渐进明细</strong> 随着信息越来越多、估算越来越准确，进而不断提高项目管理计划的详细程度的迭代过程。</p><p><strong>Refactoring. 重构</strong> 一种产品质量技术，其通过提高产品的可维护性和其他需要的属性来改善产品设计，同时并不改变产品的预期行为。</p><p><strong>Retrospective. 回顾</strong> 一种定期进行的研讨活动。其中参与者针对其工作和工作成果进行探讨，旨在对过程和产品做出改进。</p><p><strong>Rolling Wave Planning. 滚动式规划</strong> 一种迭代式的规划技术，对近期要完成的工作进行详细规划，对远期工作只做粗略规划。</p><p><strong>Scaled Agile Framework (SAFe). 大规模敏捷框架</strong> 一个集成模式的知识库，用于企业范围的精益开发。</p><p><strong>Scrum. Scrum</strong> 一种复杂产品开发与维持的敏捷框架，它由特定的角色、事件和工件等元素组成。</p><p><strong>Scrumban. Scrumban</strong> 一种在团队选择 Scrum 作为工作方式时产生的管理框架，它以看板方法作为透视镜从而审视、理解并持续改善其工作。</p><p><strong>Scrum Board. Scrum 板</strong> 一种用于管理产品待办事项列表和冲刺待办事项列表的信息发射源，它能显示工作流及其瓶颈。</p><p><strong>Scrum Master. Scrum 主管</strong> 指开发团队的教练和 Scrum 框架中的产品负责人。其负责消除障碍促进富有成效的事件并保护团队免受干扰。</p><p><strong>Scrum Team. Scrum 团队</strong> 指在敏捷开发中开发团队、Scrum 主管和产品负责人的总和。</p><p><strong>Self-Organizing Team. 自组织团队</strong> 一种跨职能团队，其中为实现团队目标团队成员根据需要轮换着发挥领导作用。</p><p><strong>Servant Leadership. 服务型领导</strong> 一种像团队提供服务的领导，实践重点是理解并解决团队成员的需求和发展，尽可能提高团队的绩效。</p><p><strong>Service Request Manager. 服务请求管理者</strong> 指在连续工作流或看板环境中负责整理服务请求，旨在实现最大价值的人员。它相当于产品负责人。</p><p><strong>Siloed Organization. 孤岛组织</strong> 只能部分满足向客户交付价值的需求的方式构建的组织。参照价值流。</p><p><strong>Single Loop Learning. 单循环学习</strong> 指未根据经验提出质疑、仅仅利用预先确定的特定方法解决问题的实践。</p><p><strong>Smoke Testing. 冒烟测试</strong> 利用一组轻量级测试，确保正在开发的系统实现最重要的预期功能的实践。</p><p><strong>Specification by Example (SBE). 实例化需求</strong> 为软件产品定义需求和定义面向商业的功能测试的一种协作方法，基于使用实例获取并阐明需求而不是抽象陈述需求。</p><p><strong>Spike. 刺探</strong> 指项目中短暂的时间间隔，通常长度固定在此期间，团队开展研究或针对方案的某个方面进行原型研究验证其可能性。</p><p><strong>Sprint. 冲刺</strong> 描述敏捷考法中的时间盒迭代。</p><p><strong>Sprint Backlog. 冲刺待办事项列表</strong> 指由 Scrum 团队识别的、需要在 Sprint 中完成的工作事项列表。</p><p><strong>Sprint Planning. 冲刺计划</strong> 指敏捷考法中的一个协作事件，团队为目前的冲刺制定工作计划。</p><p><strong>Story Point. 故事点</strong> 用于相关用户故事估算技术中的一种无量纲指标。</p><p><strong>Swarming. 群集</strong> 指一种团队多个成员合作、重点消除特定障碍的技术。</p><p><strong>Technical Debt. 技术债务</strong> 指产品生命周期早期未能完成工作的递延成本。</p><p><strong>Test-Driven Development. 测试驱动开发</strong> 在工作开始前定义测试的一种技术，它采用零缺陷的思维模式使工作进度能持续得到确认。</p><p><strong>Timebox. 时间盒</strong> 指一段固定时间例如 1 周。</p><p><strong>T-shaped. T 型人才</strong> 指深入掌握单一专业技能，并广泛掌握团队所需其他技能的人员。</p><p><strong>User Story. 用户故事</strong> 针对特定用户的可交付成果价值的简要描述。是对澄清细节对话的承诺。</p><p><strong>User Story Mapping. 用户故事地图</strong> 一宗将工作纳入一个应用模型的可视化实践，旨在帮助理解随着时间推移而创建的高价值功能集，发现待办事项列表中的遗漏，有效规划向用户交付价值的软件发布。</p><p><strong>UX Design. 用户体验设计</strong> 一种促进用户体验的过程，重点改善用户与产品互动中的可用性和可访问性。</p><p><strong>Value Stream. 价值流</strong> 一种组织性结构，重点关注通过特定产品或服务交付流向客户的价值。</p><p><strong>Value Stream Mapping. 价值流图</strong> 用于记录、分析和改善为客户生产产品或提供服务时所需的信息或材料流的精益企业技术。</p>',114),g=[p];function e(a,i){return r(),n("div",null,g)}const c=t(s,[["render",e],["__file","appendix3.html.vue"]]);export{c as default};
