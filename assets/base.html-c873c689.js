import{_ as a,o as e,c as r,e as i}from"./app-d85a60fe.js";const h={},d=i('<h1 id="整理的关于-qa-的一些信息" tabindex="-1"><a class="header-anchor" href="#整理的关于-qa-的一些信息" aria-hidden="true">#</a> 整理的关于 QA 的一些信息</h1><h2 id="qa-名称的定义" tabindex="-1"><a class="header-anchor" href="#qa-名称的定义" aria-hidden="true">#</a> QA 名称的定义</h2><ul><li>质量保证 Quality Assurance</li><li>质量分析 Quality Analysis</li><li>质量倡导者 Quality Advocate</li></ul><h2 id="质量是什么" tabindex="-1"><a class="header-anchor" href="#质量是什么" aria-hidden="true">#</a> 质量是什么</h2><p>产品质量不是检测出来的，从产品生产出来后质量就已经在那了。 测试只能检测、发现缺陷，而质量要通过缺陷预防来实现。</p><h3 id="外部质量" tabindex="-1"><a class="header-anchor" href="#外部质量" aria-hidden="true">#</a> 外部质量</h3><p>软件呈现给用户的外部形态，是否有缺陷、是否稳定、是否有性能问题等。也就是最终用户在软件使用过程中的各种体验，包括软件可学习、高效、不易出错、有用、难忘等特性，都属于外部质量范畴。外部质量也可以称为使用质量，主要是从使用软件的用户角度来看的。</p><p>外部质量能够被用户直接感知到，直接影响用户的使用，因而显得特别重要，客户/用户一般也比较容易为外部质量买单。</p><h3 id="内部质量" tabindex="-1"><a class="header-anchor" href="#内部质量" aria-hidden="true">#</a> 内部质量</h3><p>指软件系统内部的质量状态，包括代码的效率、结构、可读性、可扩展性、可靠性和可维护性等。内部质量主要从开发人员角度来看，也称为代码质量。</p><p>内部质量不会被最终用户感知到，不容易被客户/用户买单，也常容易被团队忽略。但是，内部质量会影响外部质量，需要团队引起重视，加强设计、开发等环节的质量把控。</p><h3 id="内建质量" tabindex="-1"><a class="header-anchor" href="#内建质量" aria-hidden="true">#</a> 内建质量</h3><p>质量不能被检测出来，要提高软件产品的内、外部质量，都需要通过质量内建（或质量内嵌）的方式，做好每个环节的质量保障工作。质量内建包含自动化测试和手动测试。 另外，质量内建不仅要考虑功能测试，对于跨功能测试同样是需要做到内建的，比如安全内建、持续性能测试等。</p>',13),t=[d];function n(s,c){return e(),r("div",null,t)}const o=a(h,[["render",n],["__file","base.html.vue"]]);export{o as default};
