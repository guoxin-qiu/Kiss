import{_ as i,o as a,c as e,e as l}from"./app-d85a60fe.js";const h={},r=l('<h1 id="敏捷概述" tabindex="-1"><a class="header-anchor" href="#敏捷概述" aria-hidden="true">#</a> 敏捷概述</h1><h2 id="_1-可确定的工作与高度不确定的工作" tabindex="-1"><a class="header-anchor" href="#_1-可确定的工作与高度不确定的工作" aria-hidden="true">#</a> 1. 可确定的工作与高度不确定的工作</h2><ol><li>传统预测法</li><li>敏捷为了在短时间内探讨可能性，根据评估和反馈快速调整</li></ol><h2 id="_2-《敏捷宣言》及思维模式" tabindex="-1"><a class="header-anchor" href="#_2-《敏捷宣言》及思维模式" aria-hidden="true">#</a> 2.《敏捷宣言》及思维模式</h2><h3 id="敏捷宣言" tabindex="-1"><a class="header-anchor" href="#敏捷宣言" aria-hidden="true">#</a> 敏捷宣言</h3><ol><li>个体以及互动而不是过程和工具</li><li>可用的软件而不是完整的文档</li><li>客户合作而不是合同谈判</li><li>应对变更而不是遵循计划</li></ol><h3 id="十二大原则" tabindex="-1"><a class="header-anchor" href="#十二大原则" aria-hidden="true">#</a> 十二大原则</h3><ol><li>我们的最高目标是，通过尽早持续交付有价值的软件来满足客户的需求</li><li>欢迎对需求提出变更，即使 在项目开发后期也不例外。敏捷过程要善于利用需求变更，帮助客户获得竞争优势</li><li>要经常交付可用的软件，周期从几周到几个月不等，且越短越好</li><li>项目实施过程中，业务人员与开发人员必须始终通力协作</li><li>要善于激励项目人员，给予他们所需的环境和支持，并相信他们能够完成任务</li><li>无论是对开发团队还是团队内部，信息传达最有效的方法都是面对面的交谈</li><li>可用的软件是衡量进度的首要衡量标准</li><li>敏捷过程提倡可持续的开发。项目发起人、开发人员和用户应该都能够始终保持步调稳定</li><li>对技术的精益求精以及对设计的不断完善将提高敏捷性</li><li>简洁，即尽最大可能减少不必要的工作，这是一门艺术</li><li>最佳的架构、需求和设计将出自于自组织团队</li><li>团队要定期反省怎样做才能更有效，并相应地调整团队的行为</li></ol><h2 id="_3-精益与看板方法" tabindex="-1"><a class="header-anchor" href="#_3-精益与看板方法" aria-hidden="true">#</a> 3. 精益与看板方法</h2><p>将敏捷和看板方法是为精益思想的衍生物</p><p>重点在于交付价值、尊重人、减少浪费、透明化、适应变更以及持续改善</p><h2 id="_4-不确定性、风险和生命周期选择" tabindex="-1"><a class="header-anchor" href="#_4-不确定性、风险和生命周期选择" aria-hidden="true">#</a> 4. 不确定性、风险和生命周期选择</h2><p>利用较少的工作增量验证自身的工作，并且可以对接下来的工作做出相应变更</p><h3 id="迭代和增量方法减少了浪费和返工" tabindex="-1"><a class="header-anchor" href="#迭代和增量方法减少了浪费和返工" aria-hidden="true">#</a> 迭代和增量方法减少了浪费和返工</h3><ul><li>非常短的反馈循环</li><li>频繁调整过程</li><li>重新进行优先级排序</li><li>定期更新计划</li><li>频繁交付</li></ul>',15),d=[r];function t(n,c){return a(),e("div",null,d)}const s=i(h,[["render",t],["__file","chapter2.html.vue"]]);export{s as default};
