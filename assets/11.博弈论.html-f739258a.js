import{_ as e,o as a,c as i,e as t}from"./app-d85a60fe.js";const l={},o=t('<h1 id="博弈论" tabindex="-1"><a class="header-anchor" href="#博弈论" aria-hidden="true">#</a> 博弈论</h1><p>Game Theory</p><h2 id="导论" tabindex="-1"><a class="header-anchor" href="#导论" aria-hidden="true">#</a> 导论</h2><ol><li>不要选择劣势策略（找优势策略） Don&#39;t play a strictly dominated strategy. 原因：选了优势策略，不管别人怎么选，总是可以得到更好的结果。</li><li>理行选择导致次优的结果 Rational choices can lead to bad outcomes. 会导致“不充分”的结果，即“帕累托效应”</li><li>换位思考 Put yourself in someone else&#39;s shoes, figure out what their payoffs are, and try and figure out what they are going to do.</li><li>欲得之，先知之 You can&#39;t get what you want, till you know what you want.</li></ol><h2 id="学会换位思考" tabindex="-1"><a class="header-anchor" href="#学会换位思考" aria-hidden="true">#</a> 学会换位思考</h2><ol><li>囚徒困境 Prisoners&#39; Dilemma 改变收益，改变动机。 Change the payoffs, change the incentives.</li></ol><ul><li>Contracts or Regulation</li><li>Repeated Interaction 把单次博弈变成重复博弈</li><li>Education</li></ul><ol start="2"><li>博弈的要素</li></ol><ul><li>参与人</li><li>策略</li><li>收益</li></ul><ol start="3"><li>弱劣势策略</li><li>迭代剔除劣势策略</li><li>共同知识 Common Knowledge</li></ol><h2 id="迭代剔除和中位选民定理" tabindex="-1"><a class="header-anchor" href="#迭代剔除和中位选民定理" aria-hidden="true">#</a> 迭代剔除和中位选民定理</h2>',11),n=[o];function r(h,s){return a(),i("div",null,n)}const c=e(l,[["render",r],["__file","11.博弈论.html.vue"]]);export{c as default};
